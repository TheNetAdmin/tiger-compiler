Terminals unused in grammar

   TEST


State 19 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | funcall
    4    | lvalue ASSIGN exp
    5    | NIL
    6    | seq
    7    | INT
    8    | STRING
    9    | LET decs IN explist END
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | exp EQ exp
   15    | MINUS exp
   16    | exp NEQ exp
   17    | exp GT exp
   18    | exp LT exp
   19    | exp GE exp
   20    | exp LE exp
   21    | exp AND exp
   22    | exp OR exp
   23    | record
   24    | array
   25    | IF exp THEN exp ELSE exp
   26    | WHILE exp DO exp
   27    | FOR id ASSIGN exp TO exp DO exp
   28    | BREAK

   29 seq: LPAREN explist RPAREN

   30 record: id LBRACE refields RBRACE

   31 refields: id EQ exp COMMA refields
   32         | id EQ exp
   33         | /* empty */

   34 array: id LBRACK exp RBRACK OF exp

   35 decs: dec decs
   36     | /* empty */

   37 dec: tydec
   38    | vardec
   39    | fundec

   40 tydec: TYPE id EQ ty

   41 ty: id
   42   | LBRACE typefields RBRACE
   43   | ARRAY OF id

   44 typefields: id COLON id COMMA typefields
   45           | id COLON id
   46           | /* empty */

   47 vardec: VAR id ASSIGN exp
   48       | VAR id COLON id ASSIGN exp

   49 fundec: FUNCTION id LPAREN typefields RPAREN EQ exp
   50       | FUNCTION id LPAREN typefields RPAREN COLON id EQ exp

   51 explist: exp SEMICOLON explist
   52        | exp
   53        | /* empty */

   54 lvalue: id
   55       | lvalue DOT id
   56       | lvalue LBRACK exp RBRACK

   57 funcall: id LPAREN args RPAREN

   58 args: exp COMMA args
   59     | exp
   60     | /* empty */

   61 id: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 61
STRING (259) 8
INT (260) 7
ASSIGN (261) 4 27 47 48
OR (262) 22
AND (263) 21
GE (264) 19
GT (265) 17
LE (266) 20
LT (267) 18
NEQ (268) 16
EQ (269) 14 31 32 40 49 50
MINUS (270) 11 15
PLUS (271) 10
DIVIDE (272) 13
TIMES (273) 12
ELSE (274) 25
OF (275) 34 43
DO (276) 26 27
UMINUS (277)
COMMA (278) 31 44 58
COLON (279) 44 45 48 50
SEMICOLON (280) 51
LPAREN (281) 29 49 50 57
RPAREN (282) 29 49 50 57
LBRACK (283) 34 56
RBRACK (284) 34 56
LBRACE (285) 30 42
RBRACE (286) 30 42
DOT (287) 55
ARRAY (288) 43
IF (289) 25
THEN (290) 25
WHILE (291) 26
FOR (292) 27
TO (293) 27
LET (294) 9
IN (295) 9
END (296) 9
BREAK (297) 28
NIL (298) 5
FUNCTION (299) 49 50
VAR (300) 47 48
TYPE (301) 40
TEST (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28, on right: 1 4 10 11 12 13 14 15 16 17 18 19
    20 21 22 25 26 27 31 32 34 47 48 49 50 51 52 56 58 59
seq (51)
    on left: 29, on right: 6
record (52)
    on left: 30, on right: 23
refields (53)
    on left: 31 32 33, on right: 30 31
array (54)
    on left: 34, on right: 24
decs (55)
    on left: 35 36, on right: 9 35
dec (56)
    on left: 37 38 39, on right: 35
tydec (57)
    on left: 40, on right: 37
ty (58)
    on left: 41 42 43, on right: 40
typefields (59)
    on left: 44 45 46, on right: 42 44 49 50
vardec (60)
    on left: 47 48, on right: 38
fundec (61)
    on left: 49 50, on right: 39
explist (62)
    on left: 51 52 53, on right: 9 29 51
lvalue (63)
    on left: 54 55 56, on right: 2 4 55 56
funcall (64)
    on left: 57, on right: 3
args (65)
    on left: 58 59 60, on right: 57 58
id (66)
    on left: 61, on right: 27 30 31 32 34 40 41 43 44 45 47 48 49 50
    54 55 57


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 1

   61 id: ID .

    $default  reduce using rule 61 (id)


state 2

    8 exp: STRING .

    $default  reduce using rule 8 (exp)


state 3

    7 exp: INT .

    $default  reduce using rule 7 (exp)


state 4

   15 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 20
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 5

   29 seq: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 53 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 22
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 6

   25 exp: IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 23
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 7

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 8

   27 exp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 25


state 9

    9 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 36 (decs)

    decs    go to state 29
    dec     go to state 30
    tydec   go to state 31
    vardec  go to state 32
    fundec  go to state 33


state 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


state 11

    5 exp: NIL .

    $default  reduce using rule 5 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 34


state 13

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 1 (program)


state 14

    6 exp: seq .

    $default  reduce using rule 6 (exp)


state 15

   23 exp: record .

    $default  reduce using rule 23 (exp)


state 16

   24 exp: array .

    $default  reduce using rule 24 (exp)


state 17

    2 exp: lvalue .
    4    | lvalue . ASSIGN exp
   55 lvalue: lvalue . DOT id
   56       | lvalue . LBRACK exp RBRACK

    ASSIGN  shift, and go to state 47
    LBRACK  shift, and go to state 48
    DOT     shift, and go to state 49

    $default  reduce using rule 2 (exp)


state 18

    3 exp: funcall .

    $default  reduce using rule 3 (exp)


state 19

   30 record: id . LBRACE refields RBRACE
   34 array: id . LBRACK exp RBRACK OF exp
   54 lvalue: id .
   57 funcall: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 50
    LBRACK  shift, and go to state 51
    LBRACE  shift, and go to state 52

    LBRACK    [reduce using rule 54 (lvalue)]
    $default  reduce using rule 54 (lvalue)


state 20

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | MINUS exp .
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 15 (exp)


state 21

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   51 explist: exp . SEMICOLON explist
   52        | exp .

    OR         shift, and go to state 35
    AND        shift, and go to state 36
    GE         shift, and go to state 37
    GT         shift, and go to state 38
    LE         shift, and go to state 39
    LT         shift, and go to state 40
    NEQ        shift, and go to state 41
    EQ         shift, and go to state 42
    MINUS      shift, and go to state 43
    PLUS       shift, and go to state 44
    DIVIDE     shift, and go to state 45
    TIMES      shift, and go to state 46
    SEMICOLON  shift, and go to state 53

    $default  reduce using rule 52 (explist)


state 22

   29 seq: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 54


state 23

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp . THEN exp ELSE exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    THEN    shift, and go to state 55


state 24

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   26    | WHILE exp . DO exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    DO      shift, and go to state 56


state 25

   27 exp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 57


state 26

   49 fundec: FUNCTION . id LPAREN typefields RPAREN EQ exp
   50       | FUNCTION . id LPAREN typefields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  go to state 58


state 27

   47 vardec: VAR . id ASSIGN exp
   48       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 59


state 28

   40 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 60


state 29

    9 exp: LET decs . IN explist END

    IN  shift, and go to state 61


state 30

   35 decs: dec . decs

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 36 (decs)

    decs    go to state 62
    dec     go to state 30
    tydec   go to state 31
    vardec  go to state 32
    fundec  go to state 33


state 31

   37 dec: tydec .

    $default  reduce using rule 37 (dec)


state 32

   38 dec: vardec .

    $default  reduce using rule 38 (dec)


state 33

   39 dec: fundec .

    $default  reduce using rule 39 (dec)


state 34

    0 $accept: program $end .

    $default  accept


state 35

   22 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 63
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 36

   21 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 64
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 37

   19 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 65
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 38

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 66
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 39

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 67
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 40

   18 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 68
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 41

   16 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 69
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 42

   14 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 70
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 43

   11 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 71
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 44

   10 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 72
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 45

   13 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 73
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 46

   12 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 47

    4 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 48

   56 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 49

   55 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 77


state 50

   57 funcall: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 60 (args)

    exp      go to state 78
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    args     go to state 79
    id       go to state 19


state 51

   34 array: id LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 52

   30 record: id LBRACE . refields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 33 (refields)

    refields  go to state 81
    id        go to state 82


state 53

   51 explist: exp SEMICOLON . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 53 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 83
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 54

   29 seq: LPAREN explist RPAREN .

    $default  reduce using rule 29 (seq)


state 55

   25 exp: IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 56

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 85
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 57

   27 exp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 86
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 58

   49 fundec: FUNCTION id . LPAREN typefields RPAREN EQ exp
   50       | FUNCTION id . LPAREN typefields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 87


state 59

   47 vardec: VAR id . ASSIGN exp
   48       | VAR id . COLON id ASSIGN exp

    ASSIGN  shift, and go to state 88
    COLON   shift, and go to state 89


state 60

   40 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 90


state 61

    9 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 53 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 91
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 62

   35 decs: dec decs .

    $default  reduce using rule 35 (decs)


state 63

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   22    | exp OR exp .

    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 22 (exp)


state 64

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   21    | exp AND exp .
   22    | exp . OR exp

    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 21 (exp)


state 65

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 19 (exp)


state 66

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 67

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 20 (exp)


state 68

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   18    | exp LT exp .
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 69

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   16    | exp NEQ exp .
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 70

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 71

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 11 (exp)


state 72

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 10 (exp)


state 73

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 13 (exp)


state 74

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 75

    4 exp: lvalue ASSIGN exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 4 (exp)


state 76

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   56 lvalue: lvalue LBRACK exp . RBRACK

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    RBRACK  shift, and go to state 92


state 77

   55 lvalue: lvalue DOT id .

    $default  reduce using rule 55 (lvalue)


state 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   58 args: exp . COMMA args
   59     | exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    COMMA   shift, and go to state 93

    $default  reduce using rule 59 (args)


state 79

   57 funcall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 94


state 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   34 array: id LBRACK exp . RBRACK OF exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    RBRACK  shift, and go to state 95


state 81

   30 record: id LBRACE refields . RBRACE

    RBRACE  shift, and go to state 96


state 82

   31 refields: id . EQ exp COMMA refields
   32         | id . EQ exp

    EQ  shift, and go to state 97


state 83

   51 explist: exp SEMICOLON explist .

    $default  reduce using rule 51 (explist)


state 84

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp THEN exp . ELSE exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    ELSE    shift, and go to state 98


state 85

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   26    | WHILE exp DO exp .

    $default  reduce using rule 26 (exp)


state 86

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | FOR id ASSIGN exp . TO exp DO exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    TO      shift, and go to state 99


state 87

   49 fundec: FUNCTION id LPAREN . typefields RPAREN EQ exp
   50       | FUNCTION id LPAREN . typefields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 46 (typefields)

    typefields  go to state 100
    id          go to state 101


state 88

   47 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 102
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 89

   48 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 103


state 90

   40 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 104
    ARRAY   shift, and go to state 105

    ty  go to state 106
    id  go to state 107


state 91

    9 exp: LET decs IN explist . END

    END  shift, and go to state 108


state 92

   56 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 56 (lvalue)


state 93

   58 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 60 (args)

    exp      go to state 78
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    args     go to state 109
    id       go to state 19


state 94

   57 funcall: id LPAREN args RPAREN .

    $default  reduce using rule 57 (funcall)


state 95

   34 array: id LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 110


state 96

   30 record: id LBRACE refields RBRACE .

    $default  reduce using rule 30 (record)


state 97

   31 refields: id EQ . exp COMMA refields
   32         | id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 111
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 98

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 112
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 99

   27 exp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 113
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 100

   49 fundec: FUNCTION id LPAREN typefields . RPAREN EQ exp
   50       | FUNCTION id LPAREN typefields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 114


state 101

   44 typefields: id . COLON id COMMA typefields
   45           | id . COLON id

    COLON  shift, and go to state 115


state 102

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   47 vardec: VAR id ASSIGN exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 47 (vardec)


state 103

   48 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 116


state 104

   42 ty: LBRACE . typefields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 46 (typefields)

    typefields  go to state 117
    id          go to state 101


state 105

   43 ty: ARRAY . OF id

    OF  shift, and go to state 118


state 106

   40 tydec: TYPE id EQ ty .

    $default  reduce using rule 40 (tydec)


state 107

   41 ty: id .

    $default  reduce using rule 41 (ty)


state 108

    9 exp: LET decs IN explist END .

    $default  reduce using rule 9 (exp)


state 109

   58 args: exp COMMA args .

    $default  reduce using rule 58 (args)


state 110

   34 array: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 119
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 111

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   31 refields: id EQ exp . COMMA refields
   32         | id EQ exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    COMMA   shift, and go to state 120

    $default  reduce using rule 32 (refields)


state 112

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp THEN exp ELSE exp .

    $default  reduce using rule 25 (exp)


state 113

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | FOR id ASSIGN exp TO exp . DO exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46
    DO      shift, and go to state 121


state 114

   49 fundec: FUNCTION id LPAREN typefields RPAREN . EQ exp
   50       | FUNCTION id LPAREN typefields RPAREN . COLON id EQ exp

    EQ     shift, and go to state 122
    COLON  shift, and go to state 123


state 115

   44 typefields: id COLON . id COMMA typefields
   45           | id COLON . id

    ID  shift, and go to state 1

    id  go to state 124


state 116

   48 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 125
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 117

   42 ty: LBRACE typefields . RBRACE

    RBRACE  shift, and go to state 126


state 118

   43 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 127


state 119

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   34 array: id LBRACK exp RBRACK OF exp .

    $default  reduce using rule 34 (array)


state 120

   31 refields: id EQ exp COMMA . refields

    ID  shift, and go to state 1

    $default  reduce using rule 33 (refields)

    refields  go to state 128
    id        go to state 82


state 121

   27 exp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 129
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 122

   49 fundec: FUNCTION id LPAREN typefields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 130
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 123

   50 fundec: FUNCTION id LPAREN typefields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  go to state 131


state 124

   44 typefields: id COLON id . COMMA typefields
   45           | id COLON id .

    COMMA  shift, and go to state 132

    $default  reduce using rule 45 (typefields)


state 125

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   48 vardec: VAR id COLON id ASSIGN exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 48 (vardec)


state 126

   42 ty: LBRACE typefields RBRACE .

    $default  reduce using rule 42 (ty)


state 127

   43 ty: ARRAY OF id .

    $default  reduce using rule 43 (ty)


state 128

   31 refields: id EQ exp COMMA refields .

    $default  reduce using rule 31 (refields)


state 129

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | FOR id ASSIGN exp TO exp DO exp .

    $default  reduce using rule 27 (exp)


state 130

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   49 fundec: FUNCTION id LPAREN typefields RPAREN EQ exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 49 (fundec)


state 131

   50 fundec: FUNCTION id LPAREN typefields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 133


state 132

   44 typefields: id COLON id COMMA . typefields

    ID  shift, and go to state 1

    $default  reduce using rule 46 (typefields)

    typefields  go to state 134
    id          go to state 101


state 133

   50 fundec: FUNCTION id LPAREN typefields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 135
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 134

   44 typefields: id COLON id COMMA typefields .

    $default  reduce using rule 44 (typefields)


state 135

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   50 fundec: FUNCTION id LPAREN typefields RPAREN COLON id EQ exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 50 (fundec)
