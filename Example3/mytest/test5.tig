let
    var N := 8
    type intArray = array of int    
	var row : intArray := intArray [ N ] of nil
    var col : intArray := intArray [ N ] of nil
    var diag1 : intArray := intArray [ N+N-1 ] of nil
    var diag2 : intArray := intArray [ N+N-1 ] of nil
	
    function printboard(N : int, col : intArray) = (
		for i := 0 to N-1 do (
			for j := 0 to N-1 do 
				print(if col[i]=j then " O" else " .");
			print("\n")
		);
		nil
	)
    function try(c : int, N : int, row : intArray, col : intArray, diag1 : intArray, diag2 : intArray) = (
		if c=N then (
			printboard(N, col);
			print("\n");
			1
		)else( 
			for r := 0 to N-1 do
				if row[r]=0 & diag1[r+c]=0 & diag2[r+N-1-c]=0 then (
					row[r]:=1; diag1[r+c]:=1; diag2[r+N-1-c]:=1;
					col[c]:=r;
					try(c+1, N, row, col, diag1, diag2);
					row[r]:=0; diag1[r+c]:=0; diag2[r+N-1-c]:=0
				);
			0
		);
		nil
	)
in
	for i := 0 to N-1 do row[i]:=0;
	for i := 0 to N-1 do col[i]:=0;
	for i := 0 to N+N-2 do diag1[i]:=0;
	for i := 0 to N+N-2 do diag2[i]:=0;
	try(0, N, row, col, diag1, diag2);
	0
end