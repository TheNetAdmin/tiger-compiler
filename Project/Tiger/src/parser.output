State 19 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 88 conflicts: 13 shift/reduce


Grammar

    0 $accept: program "END OF FILE"

    1 program: exp

    2 exp: lvalue
    3    | funcall
    4    | lvalue ASSIGN exp
    5    | NIL
    6    | seq
    7    | INT
    8    | STRING
    9    | LET decs IN explist END
   10    | IF exp THEN exp ELSE exp
   11    | IF exp THEN exp
   12    | exp PLUS exp
   13    | exp MINUS exp
   14    | exp TIMES exp
   15    | exp DIVIDE exp
   16    | exp EQ exp
   17    | MINUS exp
   18    | exp NEQ exp
   19    | exp GT exp
   20    | exp LT exp
   21    | exp GE exp
   22    | exp LE exp
   23    | exp AND exp
   24    | exp OR exp
   25    | record
   26    | array
   27    | WHILE exp DO exp
   28    | FOR id ASSIGN exp TO exp DO exp
   29    | BREAK

   30 seq: LPAREN explist RPAREN

   31 record: id LBRACE refields RBRACE

   32 refields: id EQ exp COMMA refields
   33         | id EQ exp
   34         | %empty

   35 array: id LBRACK exp RBRACK OF exp

   36 decs: dec decs
   37     | %empty

   38 dec: tydecs
   39    | vardec
   40    | fundecs

   41 tydecs: tydec tydecs
   42       | tydec

   43 tydec: TYPE id EQ ty

   44 ty: id
   45   | LBRACE typefields RBRACE
   46   | ARRAY OF id

   47 typefields: id COLON id COMMA typefields
   48           | id COLON id
   49           | %empty

   50 vardec: VAR id ASSIGN exp
   51       | VAR id COLON id ASSIGN exp

   52 fundecs: fundec fundecs
   53        | fundec

   54 fundec: FUNCTION id LPAREN typefields RPAREN EQ exp
   55       | FUNCTION id LPAREN typefields RPAREN COLON id EQ exp

   56 explist: exp SEMICOLON explist
   57        | exp
   58        | %empty

   59 lvalue: id
   60       | lvalue DOT id
   61       | id LBRACK exp RBRACK
   62       | lvalue LBRACK exp RBRACK

   63 funcall: id LPAREN args RPAREN

   64 args: exp COMMA args
   65     | exp
   66     | %empty

   67 id: ID


Terminals, with rules where they appear

"END OF FILE" (0) 0
error (256)
ID (258) 67
STRING (259) 8
INT (260) 7
ASSIGN (261) 4 28 50 51
AND (262) 23
OR (263) 24
EQ (264) 16 32 33 43 54 55
NEQ (265) 18
LT (266) 20
LE (267) 22
GT (268) 19
GE (269) 21
PLUS (270) 12
MINUS (271) 13 17
TIMES (272) 14
DIVIDE (273) 15
DO (274) 27 28
OF (275) 35 46
ELSE (276) 10
UMINUS (277)
COMMA (278) 32 47 64
COLON (279) 47 48 51 55
SEMICOLON (280) 56
LPAREN (281) 30 54 55 63
RPAREN (282) 30 54 55 63
LBRACK (283) 35 61 62
RBRACK (284) 35 61 62
LBRACE (285) 31 45
RBRACE (286) 31 45
DOT (287) 60
ARRAY (288) 46
IF (289) 10 11
THEN (290) 10 11
WHILE (291) 27
FOR (292) 28
TO (293) 28
LET (294) 9
IN (295) 9
END (296) 9
BREAK (297) 29
NIL (298) 5
FUNCTION (299) 54 55
VAR (300) 50 51
TYPE (301) 43


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 4 10 11 12 13 14 15 16 17 18
    19 20 21 22 23 24 27 28 32 33 35 50 51 54 55 56 57 61 62 64 65
seq (50)
    on left: 30, on right: 6
record (51)
    on left: 31, on right: 25
refields (52)
    on left: 32 33 34, on right: 31 32
array (53)
    on left: 35, on right: 26
decs (54)
    on left: 36 37, on right: 9 36
dec (55)
    on left: 38 39 40, on right: 36
tydecs (56)
    on left: 41 42, on right: 38 41
tydec (57)
    on left: 43, on right: 41 42
ty (58)
    on left: 44 45 46, on right: 43
typefields (59)
    on left: 47 48 49, on right: 45 47 54 55
vardec (60)
    on left: 50 51, on right: 39
fundecs (61)
    on left: 52 53, on right: 40 52
fundec (62)
    on left: 54 55, on right: 52 53
explist (63)
    on left: 56 57 58, on right: 9 30 56
lvalue (64)
    on left: 59 60 61 62, on right: 2 4 60 62
funcall (65)
    on left: 63, on right: 3
args (66)
    on left: 64 65 66, on right: 63 64
id (67)
    on left: 67, on right: 28 31 32 33 35 43 44 46 47 48 50 51 54 55
    59 60 61 63


State 0

    0 $accept: . program "END OF FILE"

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 1

   67 id: ID .

    $default  reduce using rule 67 (id)


State 2

    8 exp: STRING .

    $default  reduce using rule 8 (exp)


State 3

    7 exp: INT .

    $default  reduce using rule 7 (exp)


State 4

   17 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 20
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 5

   30 seq: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 22
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 6

   10 exp: IF . exp THEN exp ELSE exp
   11    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 23
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 7

   27 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 8

   28 exp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 25


State 9

    9 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 37 (decs)

    decs     go to state 29
    dec      go to state 30
    tydecs   go to state 31
    tydec    go to state 32
    vardec   go to state 33
    fundecs  go to state 34
    fundec   go to state 35


State 10

   29 exp: BREAK .

    $default  reduce using rule 29 (exp)


State 11

    5 exp: NIL .

    $default  reduce using rule 5 (exp)


State 12

    0 $accept: program . "END OF FILE"

    "END OF FILE"  shift, and go to state 36


State 13

    1 program: exp .
   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 1 (program)


State 14

    6 exp: seq .

    $default  reduce using rule 6 (exp)


State 15

   25 exp: record .

    $default  reduce using rule 25 (exp)


State 16

   26 exp: array .

    $default  reduce using rule 26 (exp)


State 17

    2 exp: lvalue .
    4    | lvalue . ASSIGN exp
   60 lvalue: lvalue . DOT id
   62       | lvalue . LBRACK exp RBRACK

    ASSIGN  shift, and go to state 49
    LBRACK  shift, and go to state 50
    DOT     shift, and go to state 51

    $default  reduce using rule 2 (exp)


State 18

    3 exp: funcall .

    $default  reduce using rule 3 (exp)


State 19

   31 record: id . LBRACE refields RBRACE
   35 array: id . LBRACK exp RBRACK OF exp
   59 lvalue: id .
   61       | id . LBRACK exp RBRACK
   63 funcall: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 52
    LBRACK  shift, and go to state 53
    LBRACE  shift, and go to state 54

    LBRACK    [reduce using rule 59 (lvalue)]
    $default  reduce using rule 59 (lvalue)


State 20

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | MINUS exp .
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 17 (exp)


State 21

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   56 explist: exp . SEMICOLON explist
   57        | exp .

    AND        shift, and go to state 37
    OR         shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48
    SEMICOLON  shift, and go to state 55

    $default  reduce using rule 57 (explist)


State 22

   30 seq: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 56


State 23

   10 exp: IF exp . THEN exp ELSE exp
   11    | IF exp . THEN exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    THEN    shift, and go to state 57


State 24

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   27    | WHILE exp . DO exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    DO      shift, and go to state 58


State 25

   28 exp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 59


State 26

   54 fundec: FUNCTION . id LPAREN typefields RPAREN EQ exp
   55       | FUNCTION . id LPAREN typefields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  go to state 60


State 27

   50 vardec: VAR . id ASSIGN exp
   51       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 61


State 28

   43 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 62


State 29

    9 exp: LET decs . IN explist END

    IN  shift, and go to state 63


State 30

   36 decs: dec . decs

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 37 (decs)

    decs     go to state 64
    dec      go to state 30
    tydecs   go to state 31
    tydec    go to state 32
    vardec   go to state 33
    fundecs  go to state 34
    fundec   go to state 35


State 31

   38 dec: tydecs .

    $default  reduce using rule 38 (dec)


State 32

   41 tydecs: tydec . tydecs
   42       | tydec .

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 42 (tydecs)]
    $default  reduce using rule 42 (tydecs)

    tydecs  go to state 65
    tydec   go to state 32


State 33

   39 dec: vardec .

    $default  reduce using rule 39 (dec)


State 34

   40 dec: fundecs .

    $default  reduce using rule 40 (dec)


State 35

   52 fundecs: fundec . fundecs
   53        | fundec .

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 53 (fundecs)]
    $default  reduce using rule 53 (fundecs)

    fundecs  go to state 66
    fundec   go to state 35


State 36

    0 $accept: program "END OF FILE" .

    $default  accept


State 37

   23 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 67
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 38

   24 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 68
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 39

   16 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 69
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 40

   18 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 70
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 41

   20 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 71
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 42

   22 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 72
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 43

   19 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 73
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 44

   21 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 45

   12 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 46

   13 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 47

   14 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 77
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 48

   15 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 49

    4 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 79
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 50

   62 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 51

   60 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 81


State 52

   63 funcall: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 66 (args)

    exp      go to state 82
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    args     go to state 83
    id       go to state 19


State 53

   35 array: id LBRACK . exp RBRACK OF exp
   61 lvalue: id LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 54

   31 record: id LBRACE . refields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 34 (refields)

    refields  go to state 85
    id        go to state 86


State 55

   56 explist: exp SEMICOLON . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 87
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 56

   30 seq: LPAREN explist RPAREN .

    $default  reduce using rule 30 (seq)


State 57

   10 exp: IF exp THEN . exp ELSE exp
   11    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 88
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 58

   27 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 89
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 59

   28 exp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 90
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 60

   54 fundec: FUNCTION id . LPAREN typefields RPAREN EQ exp
   55       | FUNCTION id . LPAREN typefields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 91


State 61

   50 vardec: VAR id . ASSIGN exp
   51       | VAR id . COLON id ASSIGN exp

    ASSIGN  shift, and go to state 92
    COLON   shift, and go to state 93


State 62

   43 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 94


State 63

    9 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 95
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 64

   36 decs: dec decs .

    $default  reduce using rule 36 (decs)


State 65

   41 tydecs: tydec tydecs .

    $default  reduce using rule 41 (tydecs)


State 66

   52 fundecs: fundec fundecs .

    $default  reduce using rule 52 (fundecs)


State 67

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   23    | exp AND exp .
   24    | exp . OR exp

    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 23 (exp)


State 68

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   24    | exp OR exp .

    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 24 (exp)


State 69

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   16    | exp EQ exp .
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 70

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   18    | exp NEQ exp .
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 71

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   20    | exp LT exp .
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 72

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   22    | exp LE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


State 73

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   19    | exp GT exp .
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 74

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   21    | exp GE exp .
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 75

   12 exp: exp . PLUS exp
   12    | exp PLUS exp .
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 12 (exp)


State 76

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   13    | exp MINUS exp .
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 13 (exp)


State 77

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   14    | exp TIMES exp .
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 14 (exp)


State 78

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   15    | exp DIVIDE exp .
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 15 (exp)


State 79

    4 exp: lvalue ASSIGN exp .
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 4 (exp)


State 80

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   62 lvalue: lvalue LBRACK exp . RBRACK

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    RBRACK  shift, and go to state 96


State 81

   60 lvalue: lvalue DOT id .

    $default  reduce using rule 60 (lvalue)


State 82

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   64 args: exp . COMMA args
   65     | exp .

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    COMMA   shift, and go to state 97

    $default  reduce using rule 65 (args)


State 83

   63 funcall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 98


State 84

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   35 array: id LBRACK exp . RBRACK OF exp
   61 lvalue: id LBRACK exp . RBRACK

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    RBRACK  shift, and go to state 99


State 85

   31 record: id LBRACE refields . RBRACE

    RBRACE  shift, and go to state 100


State 86

   32 refields: id . EQ exp COMMA refields
   33         | id . EQ exp

    EQ  shift, and go to state 101


State 87

   56 explist: exp SEMICOLON explist .

    $default  reduce using rule 56 (explist)


State 88

   10 exp: IF exp THEN exp . ELSE exp
   11    | IF exp THEN exp .
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    ELSE    shift, and go to state 102

    AND       [reduce using rule 11 (exp)]
    OR        [reduce using rule 11 (exp)]
    EQ        [reduce using rule 11 (exp)]
    NEQ       [reduce using rule 11 (exp)]
    LT        [reduce using rule 11 (exp)]
    LE        [reduce using rule 11 (exp)]
    GT        [reduce using rule 11 (exp)]
    GE        [reduce using rule 11 (exp)]
    PLUS      [reduce using rule 11 (exp)]
    MINUS     [reduce using rule 11 (exp)]
    TIMES     [reduce using rule 11 (exp)]
    DIVIDE    [reduce using rule 11 (exp)]
    ELSE      [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


State 89

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   27    | WHILE exp DO exp .

    $default  reduce using rule 27 (exp)


State 90

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | FOR id ASSIGN exp . TO exp DO exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    TO      shift, and go to state 103


State 91

   54 fundec: FUNCTION id LPAREN . typefields RPAREN EQ exp
   55       | FUNCTION id LPAREN . typefields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 49 (typefields)

    typefields  go to state 104
    id          go to state 105


State 92

   50 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 106
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 93

   51 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 107


State 94

   43 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 108
    ARRAY   shift, and go to state 109

    ty  go to state 110
    id  go to state 111


State 95

    9 exp: LET decs IN explist . END

    END  shift, and go to state 112


State 96

   62 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 62 (lvalue)


State 97

   64 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 66 (args)

    exp      go to state 82
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    args     go to state 113
    id       go to state 19


State 98

   63 funcall: id LPAREN args RPAREN .

    $default  reduce using rule 63 (funcall)


State 99

   35 array: id LBRACK exp RBRACK . OF exp
   61 lvalue: id LBRACK exp RBRACK .

    OF  shift, and go to state 114

    $default  reduce using rule 61 (lvalue)


State 100

   31 record: id LBRACE refields RBRACE .

    $default  reduce using rule 31 (record)


State 101

   32 refields: id EQ . exp COMMA refields
   33         | id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 115
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 102

   10 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 116
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 103

   28 exp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 117
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 104

   54 fundec: FUNCTION id LPAREN typefields . RPAREN EQ exp
   55       | FUNCTION id LPAREN typefields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 118


State 105

   47 typefields: id . COLON id COMMA typefields
   48           | id . COLON id

    COLON  shift, and go to state 119


State 106

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   50 vardec: VAR id ASSIGN exp .

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 50 (vardec)


State 107

   51 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 120


State 108

   45 ty: LBRACE . typefields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 49 (typefields)

    typefields  go to state 121
    id          go to state 105


State 109

   46 ty: ARRAY . OF id

    OF  shift, and go to state 122


State 110

   43 tydec: TYPE id EQ ty .

    $default  reduce using rule 43 (tydec)


State 111

   44 ty: id .

    $default  reduce using rule 44 (ty)


State 112

    9 exp: LET decs IN explist END .

    $default  reduce using rule 9 (exp)


State 113

   64 args: exp COMMA args .

    $default  reduce using rule 64 (args)


State 114

   35 array: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 123
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 115

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   32 refields: id EQ exp . COMMA refields
   33         | id EQ exp .

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    COMMA   shift, and go to state 124

    $default  reduce using rule 33 (refields)


State 116

   10 exp: IF exp THEN exp ELSE exp .
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 10 (exp)


State 117

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | FOR id ASSIGN exp TO exp . DO exp

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    DO      shift, and go to state 125


State 118

   54 fundec: FUNCTION id LPAREN typefields RPAREN . EQ exp
   55       | FUNCTION id LPAREN typefields RPAREN . COLON id EQ exp

    EQ     shift, and go to state 126
    COLON  shift, and go to state 127


State 119

   47 typefields: id COLON . id COMMA typefields
   48           | id COLON . id

    ID  shift, and go to state 1

    id  go to state 128


State 120

   51 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 129
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 121

   45 ty: LBRACE typefields . RBRACE

    RBRACE  shift, and go to state 130


State 122

   46 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 131


State 123

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   35 array: id LBRACK exp RBRACK OF exp .

    $default  reduce using rule 35 (array)


State 124

   32 refields: id EQ exp COMMA . refields

    ID  shift, and go to state 1

    $default  reduce using rule 34 (refields)

    refields  go to state 132
    id        go to state 86


State 125

   28 exp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 133
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 126

   54 fundec: FUNCTION id LPAREN typefields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 134
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 127

   55 fundec: FUNCTION id LPAREN typefields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  go to state 135


State 128

   47 typefields: id COLON id . COMMA typefields
   48           | id COLON id .

    COMMA  shift, and go to state 136

    $default  reduce using rule 48 (typefields)


State 129

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   51 vardec: VAR id COLON id ASSIGN exp .

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 51 (vardec)


State 130

   45 ty: LBRACE typefields RBRACE .

    $default  reduce using rule 45 (ty)


State 131

   46 ty: ARRAY OF id .

    $default  reduce using rule 46 (ty)


State 132

   32 refields: id EQ exp COMMA refields .

    $default  reduce using rule 32 (refields)


State 133

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | FOR id ASSIGN exp TO exp DO exp .

    $default  reduce using rule 28 (exp)


State 134

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   54 fundec: FUNCTION id LPAREN typefields RPAREN EQ exp .

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 54 (fundec)


State 135

   55 fundec: FUNCTION id LPAREN typefields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 137


State 136

   47 typefields: id COLON id COMMA . typefields

    ID  shift, and go to state 1

    $default  reduce using rule 49 (typefields)

    typefields  go to state 138
    id          go to state 105


State 137

   55 fundec: FUNCTION id LPAREN typefields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 139
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


State 138

   47 typefields: id COLON id COMMA typefields .

    $default  reduce using rule 47 (typefields)


State 139

   12 exp: exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . GT exp
   20    | exp . LT exp
   21    | exp . GE exp
   22    | exp . LE exp
   23    | exp . AND exp
   24    | exp . OR exp
   55 fundec: FUNCTION id LPAREN typefields RPAREN COLON id EQ exp .

    AND     shift, and go to state 37
    OR      shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 55 (fundec)
